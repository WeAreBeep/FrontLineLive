name: Build and Release

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  # pull_request:
  #   branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
           # Container registry username
           username: ${{ secrets.ACR_USERNAME }}
           # Container registry password
           password: ${{ secrets.ACR_PASSWORD }}
           # Container registry server url
           login-server: ${{ secrets.ACR_SERVER }}
       
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: /Dockerfile
          push: true
          tags: frontlineacr.azurecr.io/web:${{ github.run_number }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    #if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    environment: Development

    defaults:
      run:
        working-directory: ./src/infra

    steps:
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - run: |
          az group list -o table

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve